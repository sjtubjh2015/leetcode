class Solution(object):
    def generateParenthesis(self, n):
        """
        :type n: int
        :rtype: List[str]
        """

        ans = []
        def backtrack(res, left, right):
            if len(res) == 2 * n:
                ans.append(res)
                return
            if left < n:
                backtrack(res + "(", left + 1, right)
            if right < left:
                backtrack(res + ")", left, right + 1)
        if n > 0:
            backtrack("", 0, 0)
        return ans
