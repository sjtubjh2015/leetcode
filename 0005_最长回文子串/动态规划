class Solution(object):
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """

        start, end = 0, 0
        n = len(s)
        dp = [[False] * n for _ in range(n)]
        #é•¿åº¦l+1
        for l in range(n):
            for i in range(n):
                j = i + l
                if j >= n:
                    break
                if l == 0:
                    dp[i][j] = True
                elif l == 1:
                    dp[i][j] = (s[i] == s[j])
                else:
                    dp[i][j] = dp[i+1][j-1] and s[i] == s[j]
                #j - i = l > start - end
                if dp[i][j] and l > start - end:
                    start, end = i, j
        return s[i:j+1]
