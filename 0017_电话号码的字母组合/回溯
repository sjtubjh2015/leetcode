class Solution:
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        phone = {'2': ['a', 'b', 'c'],
                 '3': ['d', 'e', 'f'],
                 '4': ['g', 'h', 'i'],
                 '5': ['j', 'k', 'l'],
                 '6': ['m', 'n', 'o'],
                 '7': ['p', 'q', 'r', 's'],
                 '8': ['t', 'u', 'v'],
                 '9': ['w', 'x', 'y', 'z']}
                
        def backtrack(output, index):
            if index == n:
                ans.append(output)
                return 
            for ch in phone[digits[index]]:
                backtrack(output + ch, index + 1)
        n = len(digits)
        ans = []
        if n > 0:
            backtrack("", 0)
        return ans
